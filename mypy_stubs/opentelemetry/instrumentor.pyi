import abc
from abc import ABC, abstractmethod
from typing import Collection

class BaseInstrumentor(ABC, metaclass=abc.ABCMeta):
    def __new__(cls, *args, **kwargs): ...
    @property
    def is_instrumented_by_opentelemetry(self): ...
    @abstractmethod
    def instrumentation_dependencies(self) -> Collection[str]: ...
    def instrument(self, **kwargs): ...
    def uninstrument(self, **kwargs): ...
